% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plot_interactive.lfpca.R
\name{plot_interactive.lfpca}
\alias{plot_interactive.lfpca}
\title{Interactive Plotting for Longtiudinal Functional Data Analysis using FPCA}
\usage{
plot_interactive.lfpca(result_LFPCA, ggplotsize.w = 27, ggplotsize.h = 20,
  ggplotsize.unit = "cm")
}
\arguments{
\item{result_LFPCA}{output of fpca.lfda() function in the Refund package}

\item{ggplotsize.w}{width of downloaded PNG file; defaults to 27.}

\item{ggplotsize.h}{height of downloaded PNG file; defaults to 20.}

\item{ggplotsize.unit}{Units in which \code{width} and \code{height} are given; defaults to "\code{cm}".}
}
\description{
Produces an interactive plot illustrating longitudinal functioanl data analysis (Park and Staicu, 2015).
}
\examples{
###########################################################################################
  # data generation
  ###########################################################################################
  library(refund)
  library(rgl)
  set.seed(1)
  n <- 100 # number of subjects
  ss <- seq(0,1,length.out=101)
  TT <- seq(0, 1, length.out=41)
  mi <- runif(n, min=6, max=15)
  ij <- sapply(mi, function(a) sort(sample(1:41, size=a, replace=FALSE)))

  # error variances
  sigma <- 0.1
  sigma_wn <- 0.2

  lambdaTrue <- c(1,0.5) # True eigenvalues
  eta1True <- c(0.5, 0.5^2, 0.5^3) # True eigenvalues
  eta2True <- c(0.5^2, 0.5^3) # True eigenvalues

  phi <- sqrt(2)*cbind(sin(2*pi*ss),cos(2*pi*ss))
  psi1 <- cbind(rep(1,length(TT)), sqrt(3)*(2*TT-1), sqrt(5)*(6*TT^2-6*TT+1))
  psi2 <- sqrt(2)*cbind(sin(2*pi*TT),cos(2*pi*TT))

  zeta1 <- sapply(eta1True, function(a) rnorm(n = n, mean = 0, sd = a))
  zeta2 <- sapply(eta2True, function(a) rnorm(n = n, mean = 0, sd = a))

  xi1 <- unlist(lapply(1:n, function(a) (zeta1 \%*\% t(psi1))[a,ij[[a]]] ))
  xi2 <- unlist(lapply(1:n, function(a) (zeta2 \%*\% t(psi2))[a,ij[[a]]] ))
  xi <- cbind(xi1, xi2)

  Tij <- unlist(lapply(1:n, function(i) TT[ij[[i]]] ))
  i <- unlist(lapply(1:n, function(i) rep(i, length(ij[[i]]))))
  j <- unlist(lapply(1:n, function(i) 1:length(ij[[i]])))

  X <- xi \%*\% t(phi)
  meanFn <- function(s,t){ 0.5*t + 1.5*s + 1.3*s*t}
  mu <- matrix(meanFn(s = rep(ss, each=length(Tij)), t=rep(Tij, length(ss)) ) , nrow=nrow(X))

  Y <- mu +  X +
     matrix(rnorm(nrow(X)*ncol(phi), 0, sigma), nrow=nrow(X)) \%*\% t(phi) + # correlated error process
     matrix(rnorm(length(X), 0, sigma_wn), nrow=nrow(X)) # white noise

  # END: data generation

  ###########################################################################################
  # Illustration I : when covariance of scores from a mFPCA step is estimated using fpca.sc
  ###########################################################################################
  est <- fpca.lfda(Y = Y,
                   subject.index = i,
                   visit.index = j,
                   obsT = Tij,
                   funcArg = ss,
                   numTEvalPoints = length(TT), newdata = data.frame(i = c(1:3), Ltime = c(Tij[1], 0.2, 0.5)),
                   fbps.knots = 35, fbps.p = 3, fbps.m = 2,
                   LongiModel.method='fpca.sc',
                   mFPCA.pve = 0.95, mFPCA.knots = 35, mFPCA.p = 3, mFPCA.m = 2, mFPCA.npc = NULL,
                   sFPCA.pve = 0.95, sFPCA.nbasis = 10, sFPCA.npc = NULL,
                   gam.method = 'REML', gam.kT = 10)

  # exploratory data analysis
  plot_interactive.lfda(Y=Y, subject.index=i, visit.index=j,
                        obsT=Tij, funcArg=ss)
  # results of longitudinal functional data analysis using FPCA
  plot_interactive.lfpca(result_LFPCA = est)

  ###########################################################################################
  # Illustration II : when covariance of scores from a mFPCA step is estimated using lmer
  ###########################################################################################
  est.lme <- fpca.lfda(Y = Y,
                       subject.index = i,
                       visit.index = j,
                       obsT = Tij,
                       funcArg = ss,
                       numTEvalPoints = length(TT), newdata = data.frame(i = c(1:3), Ltime = c(Tij[1], 0.2, 0.5)),
                       fbps.knots = 35, fbps.p = 3, fbps.m = 2,
                       LongiModel.method='lme',
                       mFPCA.pve = 0.95, mFPCA.knots = 35, mFPCA.p = 3, mFPCA.m = 2, mFPCA.npc = NULL,
                       gam.method = 'REML', gam.kT = 10)

  plot_interactive.lfpca(result_LFPCA = est.lme)
}
\author{
So Young Park \email{spark13@ncsu.edu}, Ana-Maria Staicu
}
\references{
Park, S.Y. and Staicu, A.M. (2015). Longitudinal functional data analysis. Stat 4 212-226.
}
\seealso{
\code{plot_interactive.lfda} for exploratory data analysis for longitudinally-observed functional data; \code{fpca.lfda} in the Refund package for estimation method;
}

