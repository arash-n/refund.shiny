% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plot_interactive.lfda.R
\name{plot_interactive.lfda}
\alias{plot_interactive.lfda}
\title{Interactive Plotting for Exploratory Data Analysis of Longtiudinal Functional Data}
\usage{
plot_interactive.lfda(Y, subject.index, visit.index, obsT, funcArg,
  ggplotsize.w = 27, ggplotsize.h = 20, ggplotsize.unit = "cm")
}
\arguments{
\item{Y}{a matrix of which each row corresponds to one curve observed on a regular and dense grid
(dimension of N by m; N = total number of observed functions; m = number of grid points)}

\item{subject.index}{subject id; vector of length N with each element corresponding a row of Y}

\item{visit.index}{index for visits (repeated measures); vector of length N with each element corresponding a row of Y}

\item{obsT}{actual time of visits at which a function is observed; vector of length N with each element corresponding a row of Y}

\item{funcArg}{numeric; function argument}

\item{ggplotsize.w}{width of downloaded PNG file; defaults to 27.}

\item{ggplotsize.h}{height of downloaded PNG file; defaults to 20.}

\item{ggplotsize.unit}{Units in which \code{width} and \code{height} are given; defaults to "\code{cm}".}
}
\description{
Produces an interactive, descriptive plot for longitudinally-observed functioanl data.
}
\examples{
###########################################################################################
  # data generation
  ###########################################################################################
  library(refund)
  library(rgl)
  set.seed(1)
  n <- 100 # number of subjects
  ss <- seq(0,1,length.out=101)
  TT <- seq(0, 1, length.out=41)
  mi <- runif(n, min=6, max=15)
  ij <- sapply(mi, function(a) sort(sample(1:41, size=a, replace=FALSE)))

  # error variances
  sigma <- 0.1
  sigma_wn <- 0.2

  lambdaTrue <- c(1,0.5) # True eigenvalues
  eta1True <- c(0.5, 0.5^2, 0.5^3) # True eigenvalues
  eta2True <- c(0.5^2, 0.5^3) # True eigenvalues

  phi <- sqrt(2)*cbind(sin(2*pi*ss),cos(2*pi*ss))
  psi1 <- cbind(rep(1,length(TT)), sqrt(3)*(2*TT-1), sqrt(5)*(6*TT^2-6*TT+1))
  psi2 <- sqrt(2)*cbind(sin(2*pi*TT),cos(2*pi*TT))

  zeta1 <- sapply(eta1True, function(a) rnorm(n = n, mean = 0, sd = a))
  zeta2 <- sapply(eta2True, function(a) rnorm(n = n, mean = 0, sd = a))

  xi1 <- unlist(lapply(1:n, function(a) (zeta1 \%*\% t(psi1))[a,ij[[a]]] ))
  xi2 <- unlist(lapply(1:n, function(a) (zeta2 \%*\% t(psi2))[a,ij[[a]]] ))
  xi <- cbind(xi1, xi2)

  Tij <- unlist(lapply(1:n, function(i) TT[ij[[i]]] ))
  i <- unlist(lapply(1:n, function(i) rep(i, length(ij[[i]]))))
  j <- unlist(lapply(1:n, function(i) 1:length(ij[[i]])))

  X <- xi \%*\% t(phi)
  meanFn <- function(s,t){ 0.5*t + 1.5*s + 1.3*s*t}
  mu <- matrix(meanFn(s = rep(ss, each=length(Tij)), t=rep(Tij, length(ss)) ) , nrow=nrow(X))

  Y <- mu +  X +
     matrix(rnorm(nrow(X)*ncol(phi), 0, sigma), nrow=nrow(X)) \%*\% t(phi) + # correlated error process
     matrix(rnorm(length(X), 0, sigma_wn), nrow=nrow(X)) # white noise

  # END: data generation

  plot_interactive.lfda(Y=Y, subject.index=i, visit.index=j,
                        obsT=Tij, funcArg=ss)
}
\author{
So Young Park \email{spark13@ncsu.edu}, Ana-Maria Staicu
}
\seealso{
\code{fpca.lfda} in the Refund package and \code{plot_interactive.lfpca} for estimation method
}

